# set the fold method for this file

# reload tmux configs
unbind C-r
bind C-r source-file ~/.config/tmux.conf \; display-message "~/.config/tmux.conf reloaded"

# Enable copying arbitrary length
set -g set-clipboard off

# Move between windows
bind-key -n M-n select-window -n
bind-key -n M-p select-window -p

# Toggle scratchpad terminal
bind-key -n M-Enter run-shell -b 'tmux_toggle_scratch -s > /dev/null'

# Toggle ChatGPT scratchpad
bind-key -n M-m run-shell -b 'tmux_toggle_scratch -s -v -b gpt -c1 "new_gpt_chat" > /dev/null'

# Toggle build terminal
bind-key -n M-b run-shell -b 'tmux_toggle_scratch -s -b build > /dev/null'
bind-key -n M-B run-shell -b 'tmux_toggle_scratch -s -b build -c "make" > /dev/null'

# Scroll up
bind C-u copy-mode -u

# resize panes {{{ ============================================================

# enter LAYOUT mode (esc or w/e to leave)
bind-key l switch-client -T LAYOUT \; display-message "Entering layout mode"

# resize the current pane
bind -T LAYOUT h resize-pane -L 3 \; switch-client -T LAYOUT
bind -T LAYOUT j resize-pane -D 3 \; switch-client -T LAYOUT
bind -T LAYOUT l resize-pane -R 3 \; switch-client -T LAYOUT
bind -T LAYOUT k resize-pane -U 3 \; switch-client -T LAYOUT

# move focus to a different pane (stay in LAYOUT mode)
bind -T LAYOUT M-h select-pane -L \; switch-client -T LAYOUT
bind -T LAYOUT M-j select-pane -D \; switch-client -T LAYOUT
bind -T LAYOUT M-l select-pane -R \; switch-client -T LAYOUT
bind -T LAYOUT M-k select-pane -U \; switch-client -T LAYOUT

# move focus to next/prev window (stay in LAYOUT mode)
bind -T LAYOUT H select-window -t :- \; switch-client -T LAYOUT
bind -T LAYOUT L select-window -t :+ \; switch-client -T LAYOUT

# move focus to next/prev window (stay in LAYOUT mode)
bind -T LAYOUT v split-window -h -p 50 -c '#{pane_current_path}' \; switch-client -T LAYOUT
bind -T LAYOUT s split-window -v -p 50 -c '#{pane_current_path}' \; switch-client -T LAYOUT
bind -T LAYOUT x kill-pane \; switch-client -T LAYOUT
# }}}

# enable copy and paste {{{ ===================================================
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
bind p run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"
# }}}

# create splits with vim equivalent keys {{{ ==================================
bind -r v split-window -h -p 50 -c '#{pane_current_path}' # horizontally split active pane
bind -r s split-window -v -p 50 -c '#{pane_current_path}' # vertically split active pane
bind -r V split-window -fh -c '#{pane_current_path}' # horizontal for whole screen
bind -r S split-window -fv -c '#{pane_current_path}' # vertical for whole screen
# }}}

# Pane status line {{{ ========================================================
set -g pane-border-format "#{pane_index} #T #{pane_current_command}"
# }}}

# Window status line {{{ ======================================================
# Highlights current window in status bar if zoomed on a pane
setw -g window-status-current-format '#{?window_zoomed_flag,#[fg=blue],}#F#I [#W] '
# }}}

# Misc one-liner settings {{{ =================================================
set-option -g status-position top # put the status bar at the top
set-option -g allow-rename off # prevent tmux from changing the title of windows/panes
set -g pane-border-status top # show pane title at top of each pane
set -sg escape-time 0 # fix vim mode switching delay
set -g history-limit 50000 # increase scrollback buffer size
set -g display-time 4000 # display tmux messages for 4 seconds
set -ga terminal-overrides ",st-256color"
set -g default-terminal "tmux-256color"
set -g mouse on
# }}}

# Misc one-liner keybinds {{{ =================================================
bind-key -n C-Space resize-pane -Z # C-space to zoom pane
bind -r C-x kill-pane # kill pane without confirmation
# bind C-p previous-window
# bind C-n next-window
# }}}

# Plugins {{{ =================================================================
# plugin: tpm {{{2 ============================================================
# prefix + I - installs new plugins and refreshes tmux env
# prefix + U - updates plugins
# the plugin manager
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.config/tmux/plugins'
set -g @tpm_plugins '\
    tmux-plugins/tpm \
    tmux-plugins/tmux-resurrect \
    tmux-plugins/tmux-continuum \
    dalejung/tmux-select-pane-no-wrap \
'
# }}}2

# plugin: tmux-resurrect {{{2 =================================================
# persists tmux env across system restarts
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'
set -g @resurrect-strategy-nvim 'session'
# }}}2

# plugin: tmux-continuum {{{2 =================================================
# makes tmux-resurrect save/restore automatic
set -g @continuum-restore 'on' # auto-restore on tmux server start.
# }}}2

# navigate splits {{{ =========================================================
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n M-h if-shell "$is_vim" "send-keys M-h" "run '#{select_pane_no_wrap} L'"
bind -n M-j if-shell "$is_vim" "send-keys M-j" "run '#{select_pane_no_wrap} D'"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "run '#{select_pane_no_wrap} U'"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "run '#{select_pane_no_wrap} R'"
# }}}

# init plugin manager {{{2 ====================================================
# IMPORTANT: keep this at the very bottom of the file
run -b '~/.config/tmux/plugins/tpm/tpm'
# }}}2
# }}}
