#! /bin/sh

id=${1?} \
class=$2
instance=$3 \
border= \
center= \
desktop= \
focus= \
follow= \
hidden= \
layer= \
locked= \
manage= \
marked= \
misc=$4 \
monitor= \
node= \
private= \
rectangle= \
split_dir= \
split_ratio= \
state= \
sticky= \
urgent=;

read -r x_pixels y_pixels <<<$(xdpyinfo | grep dimensions | sed -r 's/^[^0-9]*([0-9]+)x([0-9]+).*$/\1 \2/')
Xaxis=$(expr $(xrandr --current | grep '\*' | uniq | awk '{print $1}' | cut -d 'x' -f1) \* 9 / 10)
Yaxis=$(expr $(xrandr --current | grep '\*' | uniq | awk '{print $1}' | cut -d 'x' -f2) \* 9 / 10)
{ read mainmonitor ; read secondmonitor ; } <<< $(bspc query --monitors --names)

spotify() {
    rectangle=$(echo $Xaxis)x$(echo $Yaxis)+0+0
    center=on
    state=floating
    monitor=$secondmonitor
    sticky=on
}

caprine() {
    rectangle=$(echo $Xaxis)x$(echo $Yaxis)+0+0
    monitor=$secondmonitor
    center=on
    state=floating
    sticky=on
}

timer() {
    rectangle=$(expr 2 \* $(echo $Xaxis) / 5)x$(expr $(echo $Yaxis) / 3)+0+0
    monitor=$mainmonitor
    center=on
    state=floating
    sticky=on
}

nemo() {
    rectangle=$(expr $(echo $Xaxis) / 2)x$(expr $(echo $Yaxis) / 2)+0+0
    monitor=$mainmonitor
    center=on
    state=floating
    sticky=on
}

pyrus() {
    # state=floating
    monitor=$secondmonitor
}

signal() {
    sticky=on
    rectangle=$(echo $Xaxis)x$(echo $Yaxis)+0+0
    center=on
    state=floating
    monitor=$secondmonitor
}

discord() {
    sticky=on
    rectangle=$(echo $Xaxis)x$(echo $Yaxis)+0+0
    center=on
    state=floating
    monitor=$secondmonitor
}

telegram() {
    sticky=on
    rectangle=$(echo $Xaxis)x$(echo $Yaxis)+0+0
    center=on
    state=floating
    monitor=$secondmonitor
}

steam() {
    sticky=on
    rectangle=$(echo $Xaxis)x$(echo $Yaxis)+0+0
    center=on
    state=floating
    monitor=$secondmonitor
}

obs() {
    sticky=on
    rectangle=$(echo $Xaxis)x$(echo $Yaxis)+0+0
    center=on
    state=floating
    monitor=$secondmonitor
}

videogame() {
    monitor=$mainmonitor
}


case $instance.$class in
    (*.Signal) signal;;
    (*.Spotify) spotify;;
    (*.caprine) caprine;;
    (*.Caprine) caprine;;
    (*.discord) discord;;
    (*.TelegramDesktop) telegram;;
    (*.Steam) steam;;
    (*.nsc-pyrus-server) pyrus;;
    (*.obs) obs;;
    (*.spel2.exe) videogame;;
    (*.steam_app_*) videogame;;
    (*.timer) timer;;
    (*.Nemo) nemo;;
    (.)
        case $(ps -p "$(xdo pid "$id")" -o comm= 2>/dev/null) in
            (spotify) spotify;;
            (discord) discord;;
        esac;;
esac;

wmtitle=$(xtitle $1)
[[ $wmtitle = "Emulator" ]] && state=floating

echo \
    ${border:+"border=$border"} \
    ${center:+"center=$center"} \
    ${desktop:+"desktop=$desktop"} \
    ${focus:+"focus=$focus"} \
    ${follow:+"follow=$follow"} \
    ${hidden:+"hidden=$hidden"} \
    ${layer:+"layer=$layer"} \
    ${locked:+"locked=$locked"} \
    ${manage:+"manage=$manage"} \
    ${marked:+"marked=$marked"} \
    ${monitor:+"monitor=$monitor"} \
    ${node:+"node=$node"} \
    ${private:+"private=$private"} \
    ${rectangle:+"rectangle=$rectangle"} \
    ${split_dir:+"split_dir=$split_dir"} \
    ${split_ratio:+"split_ratio=$split_ratio"} \
    ${state:+"state=$state"} \
    ${sticky:+"sticky=$sticky"} \
    ${urgent:+"urgent=$urgent"};
