#!/usr/bin/env sh
# POSIX

# Variables {{{ ===============================================================

die() {
    printf '%s\n' "$1" >&2
    exit 1
}

# initialize variables with defaults
buffer_id="scratchterm"
run_cmd=
force_single=0

while :; do
    case $1 in
        -b|--bufferid)
            if [ "$2" ]; then
                buffer_id=$2
                shift
            else
                die 'ERROR: "--bufferid" requires a non-empty option argument.'
            fi
            ;;

        -c|--runcmd)
            if [ "$2" ]; then
                run_cmd=$2
                shift
            else
                die 'ERROR: "--runcmd" requires a non-empty option argument.'
            fi
            ;;

        -s|--force-single)
            force_single=1
            ;;

        --) # end of all options
            shift
            break
            ;;
        -?*)
            printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2
            ;;
        *)
            break
    esac

    shift
done

current_session_name=$(tmux display-message -p '#{session_name}')
current_window_id=$(tmux display-message -p '#{window_id}')
current_pane_title=$(tmux display-message -p '#{pane_title}')
current_pane_id=$(tmux display-message -p '#{pane_id}')
scratch_session_name="scratch"
scratch_pane_name_bookend="~~~"
scratch_pane_name="$scratch_pane_name_bookend(session:$current_session_name)___(window:$current_window_id)___(buffer_id:$buffer_id)$scratch_pane_name_bookend"
#}}}

# Helper functions {{{ ========================================================

# Searches for the pane with name $scratch_pane_name and echoes info about that
# pane. Args: $1 is the session to look in, $2 is the format for the output
# info.
get_info_about_scratch_pane() {
    echo $(tmux list-panes -s -t $1 -F"$2" | grep $scratch_pane_name | awk '{print $2; exit}')
}
#}}}

# Program {{{ =================================================================

# Make sure the scratch session exists {{{ ====================================
if tmux has-session -t $scratch_session_name; then
    echo "Found scratch session"
else
    echo "Creating new scratch session"
    tmux new-session -d -s $scratch_session_name -n term
    tmux select-pane -t $scratch_session_name:0.0 -T keepalive
fi
#}}}

# If we're in the scratch session, early exit {{{ =============================
[ $current_session_name = $scratch_session_name ] && exit
#}}}

# If forcing single scratch buf, send away others {{{ =========================
if [ $force_single = 1 ]; then
    scratch_pane_id=$(get_info_about_scratch_pane $current_session_name "#{pane_title} #{pane_id}")
    pane_ids=$(tmux list-panes -s -t $current_session_name -F"#{pane_title} #{pane_id}" | grep $scratch_pane_name_bookend | awk '{print $2}')
    for pane_id in $pane_ids; do
        if [ $pane_id = $scratch_pane_id ]; then
            echo "Target pane already here, not sending it away"
        else
            echo "Sending away other pane $pane_id"
            tmux break-pane -s $pane_id -t $scratch_session_name:
        fi
    done
fi
#}}}

# Situation 1: scratch pane currently focused {{{ =============================
if [ $current_pane_title = $scratch_pane_name ]; then
    scratch_pane_id=$current_pane_id
    if [ -z "$run_cmd" ]; then
        echo "Scratch pane is focused, send it back to scratch session"
        tmux break-pane -s $current_pane_id -t $scratch_session_name:
    fi
#}}}

# Situation 2: scratch pane not focused but is in current session {{{ =========
elif tmux list-panes -s -t $current_session_name -F"#{pane_title}" | grep $scratch_pane_name > /dev/null 2>&1; then
    scratch_pane_window_id=$(get_info_about_scratch_pane $current_session_name -F"#{pane_title} #{window_id}")
    scratch_pane_id=$(get_info_about_scratch_pane $current_session_name "#{pane_title} #{pane_id}")

    if [ $scratch_pane_window_id = $current_window_id ]; then
        echo "Scratch pane is in the current window, focus it"
        tmux select-pane -t $scratch_pane_id
    else
        echo "Scratch pane for this window is in a different window in the current session for some reason, bring it here"
        tmux join-pane -v -s $scratch_pane_id
    fi
#}}}

# Situation 3: scratch pane is in the scratch session {{{ =====================
elif tmux list-panes -s -t $scratch_session_name -F"#{pane_title}" | grep $scratch_pane_name > /dev/null 2>&1; then
    echo "Scratch pane is in the scratch session"
    scratch_pane_id=$(get_info_about_scratch_pane $scratch_session_name "#{pane_title} #{pane_id}")
    tmux join-pane -v -s $scratch_pane_id
#}}}

# Situation 4: scratch pane does not exist {{{ ================================
else
    echo "Scratch pane does not currently exist, creating now"
    scratch_pane_id=$(tmux split-window -v -t $current_session_name -c "#{pane_current_path}" -P -F"#{pane_id}")
    tmux select-pane -t $scratch_pane_id -T $scratch_pane_name
fi
#}}}

# Run command (if one was given) {{{ ==========================================
if [ ! -z "$run_cmd" ]; then
    echo "Executing run cmd"
    tmux send-keys -t "$scratch_pane_id" "$run_cmd" Enter
fi
#}}}

#}}}
