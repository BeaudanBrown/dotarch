#!/usr/bin/env sh

# Variables
if [ -z "$1" ]; then
    buffer_id="scratchterm"
else
    buffer_id=$1
fi

if [ ! -z "$2" ]; then
    run_command=$2
fi

current_session_name=$(tmux display-message -p '#{session_name}')
current_window_id=$(tmux display-message -p '#{window_id}')
current_pane_title=$(tmux display-message -p '#{pane_title}')
current_pane_id=$(tmux display-message -p '#{pane_id}')
scratch_session_name="scratch"
scratch_pane_name="(session:$current_session_name)___(window:$current_window_id)___(buffer_id:$buffer_id)"

# Helper functions
# Searches for the pane with name $scratch_pane_name and echoes info about that
# pane. Args: $1 is the session to look in, $2 is the format for the output
# info.
get_info_about_scratch_pane()
{
    echo $(tmux list-panes -s -t $1 -F"$2" | grep $scratch_pane_name | awk '{print $2; exit}')
}

# Program
# Make sure the scratch session exists
if tmux has-session -t $scratch_session_name; then
    echo "Found scratch session"
else
    echo "Creating new scratch session"
    tmux new-session -d -s $scratch_session_name -n term
    tmux select-pane -z "$1"t $scratch_session_name:0.0 -T keepalive
fi

# If we're in the scratch session, early exit
[ $current_session_name = $scratch_session_name ] && exit

if [ $current_pane_title = $scratch_pane_name ]; then
    echo "Scratch pane is focused, send it back to scratch session"
    scratch_pane_id=$current_pane_id
    if [ -z "$run_command" ]; then
        tmux break-pane -s $current_pane_id -t $scratch_session_name:
    fi

elif tmux list-panes -s -t $current_session_name -F"#{pane_title}" | grep $scratch_pane_name > /dev/null 2>&1; then
    scratch_pane_window_id=$(get_info_about_scratch_pane $current_session_name -F"#{pane_title} #{window_id}")
    scratch_pane_id=$(get_info_about_scratch_pane $current_session_name "#{pane_title} #{pane_id}")

    if [ $scratch_pane_window_id = $current_window_id ]; then
        echo "Scratch pane is in the current window, focus it"
        tmux select-pane -t $scratch_pane_id
    else
        echo "Scratch pane for this window is in a different window in the current session for some reason, bring it here"
        tmux join-pane -v -s $scratch_pane_id
    fi

elif tmux list-panes -s -t $scratch_session_name -F"#{pane_title}" | grep $scratch_pane_name > /dev/null 2>&1; then
    echo "Scratch pane is in the scratch session"
    scratch_pane_id=$(get_info_about_scratch_pane $scratch_session_name "#{pane_title} #{pane_id}")
    tmux join-pane -v -s $scratch_pane_id

else
    echo "Scratch pane does not currently exist, creating now"
    scratch_pane_id=$(tmux split-window -v -t $current_session_name -c "#{pane_current_path}" -P -F"#{pane_id}")
    tmux select-pane -t $scratch_pane_id -T $scratch_pane_name
fi

if [ ! -z "$run_command" ]; then
    tmux send-keys -t "$scratch_pane_id" "$run_command" Enter
fi

